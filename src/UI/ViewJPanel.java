/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Observation;
import Model.VitalSignsHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author forumkaria
 */
public class ViewJPanel extends javax.swing.JPanel {
    
    private Application application;
    
    Observation selectedObservation;
    
    DefaultTableModel viewTableModel;
    /**
     * Creates new form ViewJPanel
     */

    ViewJPanel(Application application) {
        initComponents();
        
        this.application = application;
        this.viewTableModel = (DefaultTableModel) observationTable.getModel();
        
        displayObservation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        temperatureField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bloodPressureField = new javax.swing.JTextField();
        observationIDField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        viewObservationDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("VIEW AND UPDATE VITAL SIGN");

        temperatureField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Temperature");

        bloodPressureField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodPressureFieldActionPerformed(evt);
            }
        });

        observationIDField.setEditable(false);
        observationIDField.setEnabled(false);
        observationIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                observationIDFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Blood Pressure");

        jLabel5.setText("ID");

        updateBtn.setText("UPDATE OBSERVATION");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Temperature", "BP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(observationTable);

        viewObservationDetails.setText("VIEW DETAILS");
        viewObservationDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObservationDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bloodPressureField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(updateBtn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(observationIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(temperatureField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(viewObservationDetails)
                .addGap(208, 208, 208))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(observationIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(temperatureField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(bloodPressureField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(updateBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewObservationDetails)
                .addContainerGap(9, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void temperatureFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_temperatureFieldActionPerformed

    private void bloodPressureFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodPressureFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodPressureFieldActionPerformed

    private void observationIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_observationIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_observationIDFieldActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        if (!observationIDField.getText().isEmpty()) {

            // call the findObservation method
            Observation o = this.application.getHistory().findObservation(Integer.valueOf(observationIDField.getText()));
            o.setBloodPressure(Double.valueOf(bloodPressureField.getText()));
            o.setTemperature(Double.valueOf(temperatureField.getText()));

            //  or
             //use the seletedObservation member we defined at the top of this class
//            this.selectedObservation.setBloodPressure(Double.valueOf(bloodPressureField.getText()));
//            this.selectedObservation.setTemperature(Double.valueOf(temperatureField.getText()));
            
        } else {
            JOptionPane.showMessageDialog(null, "You have not made any selection");
        }
        
        displayObservation();
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void viewObservationDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObservationDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = observationTable.getSelectedRow();
        
        if(selectedRow >=0) {
            
            this.selectedObservation = (Observation) observationTable.getValueAt(selectedRow,0);
            
            observationIDField.setText(String.valueOf(this.selectedObservation.getObservationID()));
            observationIDField.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
            observationIDField.setText(String.valueOf(this.selectedObservation.getTemperature()));

            
        }else{
            //No selection made
            
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_viewObservationDetailsActionPerformed

    public void displayObservation(){
        VitalSignsHistory history = this.application.getHistory();

        if (history.getVitalSignsHistory().size() > 0) {
            // display

            viewTableModel.setRowCount(0);
            for (Observation o : history.getVitalSignsHistory()) {
                // number of columns in the table = 3 and row should be framed

                Object row[] = new Object[3];
                row[0] = o;
                row[1] = o.getTemperature();
                row[2] = o.getBloodPressure();

                // add the row to the table
                viewTableModel.addRow(row);

            }

        } else {
            System.out.print("Empty list");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bloodPressureField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField observationIDField;
    private javax.swing.JTable observationTable;
    private javax.swing.JTextField temperatureField;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewObservationDetails;
    // End of variables declaration//GEN-END:variables
}
